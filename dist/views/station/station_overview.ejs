<!DOCTYPE html>
<html lang="en">

<head>
    <title>Station</title>
    <%- include('../header_common') %>
</head>

<body id="app">
    <!-- Nav bar -->
    <nav class="navbar navbar-expand-ti navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Ãœbersicht</a>
            <div class="navbar-brand">
                <%= station.name%>
            </div>
            <div class="float-end">
                <button type="button" class="btn btn-outline-warning me-2" data-bs-toggle="modal"
                    data-bs-target="#alertModal">
                    Hilfe
                </button>
                <form action="#" method="POST" style="display: inline;">
                    <button class="btn btn-outline-danger my-2 my-sm-0" type="submit" name="logout" value="true">
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </nav>

    <!-- Orders -->
    <div class="accordion" id="accordion">
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                    data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                    <span id="num_pastorders">{{pastorders.length}}</span>
                    <span class="ps-1">Abgeschlossene Bestellungen</span>
                </button>
            </h2>
        </div>
        <div id="collapseOne" class="accordion-collapse collapse" data-parent="#accordion">
            <div class="list-group py-2 px-2" id="pastlist" style="max-height: 40vh; overflow:auto">
                <template v-for="o in pastorders">
                    <div class="list-group-item pr-2 pl-1">
                        <!-- Order header -->
                        <div class="pb-2">
                            <span class="pe-1">#{{o.id}}</span>
                            <!-- Extras or Note detected -->
                            <span class="pe-1"><img v-if="o.note != null || (Array.isArray(o.oimap) && o.oimap.length)"
                                    src="/images/alert.png" style="width: 15px" /></span>

                            <!-- Status icons-->
                            <img v-if="o.currentState.statetype == 3" src="/images/check.png" style="width:15px">
                            <img v-else-if="o.currentState.statetype == 4" src="/images/canceled.png"
                                style="width:15px">

                            <!-- Order Data -->
                            <span v-if="o.variation != null" class="ps-1">{{o.product.name}},
                                {{o.variation.attrname}}</span>
                            <span v-else class="ps-1">{{o.product.name}}</span>


                            <!-- Right side of header-->
                            <div class="float-end">
                                <!-- Order recieved and waittime -->
                                <span class="align-middle">
                                    <img src="/images/sand_clock.png" style="width: 18px">
                                    {{this.parseTime(o.currentState.created)}}
                                </span>

                                <!-- Table name -->
                                <span class="align-middle px-3">
                                    {{o.session.table.name}}

                                </span>

                                <!-- Cancel buttons -->
                                <button
                                    v-if="o.currentState.statetype == 3 && (new Date() - new Date(o.currentState.created))/60000 < 10"
                                    class="btn btn-danger btn-sm" style="width:80px;"
                                    @click="this.updateOrderState(o.id, 4)">
                                    <img src="/images/close.png" style="width: 24px; height: 24px" />
                                </button>
                            </div>
                        </div>
                        <!-- Options -->
                        <!-- Extras or Note detected -->
                        <template v-if="o.note != null || (Array.isArray(o.oimap) && o.oimap.length)">
                            <div class="collapse show pt-1" data-parent="#orders" :id="'options_order'+o.id">
                                <div class="card card-body p-2" :id="'div_options_order'+o.id">
                                    <div v-if="o.oimap" class="row row-cols-3 py-0">
                                        <!-- List ordered ingredients-->
                                        <template v-for="oi in o.oimap">
                                            <div class="col">
                                                <img v-if="oi[1]" src="/images/add.png" style="width: 20px" />
                                                <img v-else src="/images/canceled.png" style="width: 20px" />
                                                <span class="ps-1">{{oi[0].name}}</span>
                                            </div>
                                        </template>
                                    </div>
                                </div>
                                <!-- Show note -->
                                <span v-if="o.note" class="form-control">Notiz: {{o.note}}</span>
                            </div>
                        </template>
                    </div>

                </template>
            </div>
        </div>

        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo"
                    aria-expanded="true" aria-controls="collapseTwo">
                    <span id="num_activeorders">{{activeorders.length}}</span>
                    <span class="ps-1">Aktive Bestellungen</span>
                </button>
            </h2>
        </div>
        <div id="collapseTwo" class="accordion-collapse collapse show" data-parent="#accordion">
            <div class="list-group pt-2 px-2" id="activelist">
                <template v-for="o in activeorders">
                    <div class="list-group-item pr-2 pl-1">
                        <!-- Order header -->
                        <div class="pb-2">
                            <span class="pe-1">#{{o.id}}</span>
                            <!-- Extras or Note detected -->
                            <span class="pe-1"><img v-if="o.note != null || (Array.isArray(o.oimap) && o.oimap.length)"
                                    src="/images/alert.png" style="width: 15px" /></span>

                            <!-- Status icons
                        <img v-if="o.currentState.statetype == 0" src="/images/order.png" style="width:15px">
                        <img v-else-if="o.currentState.statetype == 1" src="/images/loading.gif" style="width:15px">
                        <img v-else-if="o.currentState.statetype == 2" src="/images/outbox.png" style="width:15px">
                        <img v-else-if="o.currentState.statetype == 3" src="/images/check.png" style="width:15px">
                        <img v-else-if="o.currentState.statetype == 4" src="/images/canceled.png" style="width:15px">
                        -->
                            <!-- Order Data -->
                            <span v-if="o.variation != null">{{o.product.name}},
                                {{o.variation.attrname}}</span>
                            <span v-else>{{o.product.name}}</span>


                            <!-- Right side of header-->
                            <div class="float-end">
                                <!-- Order recieved and waittime -->
                                <span class="align-middle">
                                    <img src="/images/sand_clock.png" style="width: 18px">
                                    {{this.parseTime(o.currentState.created)}}
                                </span>

                                <!-- Table name -->
                                <span class="align-middle px-3">
                                    {{o.session.table.name}}
                                </span>

                                <!-- State Change buttons -->
                                <button v-if="o.currentState.statetype == 0" class="btn btn-info btn-sm"
                                    style="width:80px;" @click="this.updateOrderState(o.id, 1)">
                                    <img src="/images/chef.png" style="width: 20px; height: 22px" />
                                </button>
                                <button v-if="o.currentState.statetype == 1 || o.currentState.statetype == 2"
                                    class="btn btn-success btn-sm" style="width:164px;"
                                    @click="this.updateOrderState(o.id, 3)">
                                    <img src="/images/sent.png" style="width: 20px; height: 22px" />
                                </button>
                                <!-- Abort buttons -->
                                <button v-if="o.currentState.statetype == 0" class="btn btn-danger btn-sm"
                                    style="width:80px;" @click="this.updateOrderState(o.id, 4)">
                                    <img src="/images/close.png" style="width: 24px; height: 24px" />
                                </button>
                            </div>
                        </div>
                        <!-- Options -->
                        <!-- Extras or Note detected -->
                        <template v-if="o.note != null || (Array.isArray(o.oimap) && o.oimap.length)">
                            <div class="collapse show pt-1" data-parent="#orders" :id="'options_order'+o.id">
                                <div class="card card-body p-2" :id="'div_options_order'+o.id">
                                    <div v-if="o.oimap" class="row row-cols-3 py-0">
                                        <!-- List ordered ingredients-->
                                        <template v-for="oi in o.oimap">
                                            <div class="col">
                                                <img v-if="oi[1]" src="/images/add.png" style="width: 20px" />
                                                <img v-else src="/images/canceled.png" style="width: 20px" />
                                                <span class="ps-1">{{oi[0].name}}</span>
                                            </div>
                                        </template>
                                    </div>
                                </div>
                                <!-- Show note -->
                                <span v-if="o.note" class="form-control">Notiz: {{o.note}}</span>
                            </div>
                        </template>
                    </div>

                </template>
            </div>
        </div>
    </div>
    <br>

    <!-- Modal -->
    <div class="modal" id="alertModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">UnterstÃ¼tzung anfordern</h5>
                </div>
                <div class="modal-body">
                    <select v-model="selectedAlerttype" class="form-select">
                        <option disabled value="">...</option>
                        <template v-for="a in alerttypes">
                            <option :value="a.id">{{a.name}}</option>
                        </template>
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">SchlieÃŸen</button>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal" @click="createAlert()">Anfordern</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Vue Js -->
    <script>
        const {
            createApp
        } = Vue

        createApp({
            data: () => ({
                activeorders: [],
                pastorders: [],
                timer: '',
                alerttypes: [],
                selectedAlerttype: "",
                firstLoad: true,
                audio: new Audio('/media/notification.mp3') // path to file
            }),

            created() {
                // fetch on init
                console.log("created")
                this.fetchActiveOrders()
                this.fetchPastOrders()
                this.timer = setInterval(this.fetchActiveOrders, 10000); // Update each minute
                this.fetchAlertTypes()
                this.bindTimerReset()
            },

            methods: {
                // Reset timer if user interacts with site
                async bindTimerReset(){
                    $('html').bind(
                        'click keyup submit change scroll',
                        function () {
                            console.log("Timer reset")
                            clearInterval(this.timer)
                            this.timer = setInterval(this.fetchActiveOrders, 10000); // Update every 10s
                        }
                    );
                }
                ,
                async fetchActiveOrders(muted) {
                    const url = `/rest/station/<%=station.id%>/activeorders`
                    var tmp = await (await fetch(url)).json()
                    // Load OI Map for each order
                    for(var ao of tmp){
                        ao.oimap = await this.getOIMap(ao.id)
                    }
                    // Play notification sound
                    if(!this.firstLoad){
                        // Compare data structures
                        if(JSON.stringify(this.activeorders) !== JSON.stringify(tmp)){
                            // Only play if no mute is requested
                            var promise;
                            if(!muted){
                                    this.audio.pause();
                                    this.audio.currentTime = 0;
                                    promise = this.audio.play();
                                    promise.then(_ => {
                                        console.log("audio played")
                                    }).catch(error => {
                                        console.log(promise);
                                        alert("Musik wurde blockiert. Bitte etwas ankicken! :)");
                                    });
                            }
                        }
                    }else{
                        this.firstLoad=false;
                    }

                    this.activeorders = tmp;
                    //console.log(this.activeorders)
                },

                async fetchPastOrders() {
                    const url = `/rest/station/<%=station.id%>/pastorders`
                    this.pastorders = await (await fetch(url)).json()
                    // Load OI Map for each order
                    for(var po of this.pastorders){
                        po.oimap = await this.getOIMap(po.id)
                    }
                    console.log(this.pastorders)
                },

                async getOIMap(oid){
                    const url = `/rest/order/${oid}/oIMap`
                    return await (await fetch(url)).json()
                },
                
                parseTime(timestamp) {

                    return (new Date(timestamp).getHours() + "").padStart(2, '0') + ':' + (
                        new Date(timestamp).getMinutes() + "").padStart(2, '0')
                },
                
                async updateOrderState(oid, stateid) {
                    const requestOptions = {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            new: stateid
                        })
                    };
                    const response = await fetch(`/rest/order/${oid}/state`,
                        requestOptions);
                    if (response.status != 200) {
                        this.alert_error = "";
                        alert("Aktion fehlgeschlagen " + response.status);
                        console.log(response.statusText);
                    } else {
                        if (stateid == 3 || stateid == 4) {
                            // Update past orders only when neccessery
                            this.fetchPastOrders();
                        }
                        this.fetchActiveOrders(true);
                    }
                },
                
                async fetchAlertTypes() {
                    const url = `/rest/alerttypes`
                    this.alerttypes = await (await fetch(url)).json()
                },

                async createAlert() {
                    const requestOptions = {
                        method: "POST",
                    };
                    const response = await fetch(`/rest/alert/${this.selectedAlerttype}`,
                        requestOptions);
                    if (response.status != 200) {
                        this.alert_error = "";
                        alert("Aktion fehlgeschlagen " + response.status);
                        console.log(response.statusText);
                    }
                },

            },
            beforeUnmount() {
                clearInterval(this.timer);
            }



        }).mount('#app')
    </script>



</body>

</html>