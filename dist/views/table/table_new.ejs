<!-- Copyright Michael Selinger 2023 -->
<!DOCTYPE html>
<html lang="en">

<head>
    <title>Tisch</title>
    <%- include('../header_common') %>

</head>

<body id="app">
    <!-- Nav bar -->
    <nav class="navbar navbar-expand-ti navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/personal/overview">Übersicht</a>
            <ul class="navbar-nav mr-auto">
            </ul>
            <span class="navbar-brand ">Neue Sitzung</span>
        </div>
    </nav>
    <br>
    <div class="container">
        <h4>Gruppe</h4>
        <template v-for="tg in tableGroups">
            <input type="radio" class="btn-check " name="table_group" :id="tg.id" :value="tg.id" autocomplete="off"
                v-model="currentTG">
            <label class="btn btn-primary mt-2 me-2" :for="tg.id" style="min-width: 50px;">{{tg.name}}</label>
        </template>
        <p v-if="!tableGroups.length">Keine Tischgruppen definiert!</p>
        <br>
        <h4 class="pt-3">Tisch</h4>
        <select v-if="tables.length" v-model="currentTable" class="form-select">
            <option selected disabled :value="">Auswählen ...</option>
            <template v-for="(t, index) in tables">
                <option :value="t.id">{{t.name}}</option>
            </template>
        </select>
        <p v-if="!tables.length">Keine Tische vorhanden!</p>
        <br>
        <div v-if="error" class=" alert alert-danger">
            Sitzung konnte nicht erstellt werden.
        </div>
    </div>


    <!-- Neuer Tisch -->
    <div class="fixed-bottom text-center mb-2 d-grid gap-2">
        <button class="btn btn-primary btn-lg mx-2" @click="createSession()">Start</button>
    </div>

    <!-- Vue Js -->
    <script>
        const {
            createApp
        } = Vue

        createApp({
            data: () => ({
                tableGroups: [],
                tables: [],
                currentTable: "",
                currentTG: null,
                error: null,
            }),

            created() {
                // fetch on init
                this.fetchTGs()

            },

            watch: {
                // re-fetch whenever currentBranch changes
                currentTG: 'fetchTables',
            },

            methods: {
                async fetchTGs() {
                    const url = `/rest/tablegroup`
                    this.tableGroups = await (await fetch(url)).json()
                    this.currentTG = this.tableGroups[0].id
                    this.fetchTables()
                },
                async fetchTables() {
                    const url = `/rest/tablegroup/${this.currentTG}/tables`
                    this.tables = await (await fetch(url)).json()
                },
                async createSession() {
                    if (this.currentTable && this.currentTG) {
                        const requestOptions = {
                            method: "PUT",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                tid: this.currentTable
                            })
                        };
                        const response = await fetch("/rest/session",
                            requestOptions);
                        if (response.status != 200) {
                            this.error = true;
                        } else {
                            const data = await response.json();
                            window.location.href = "/table/" + data.sid;
                        }
                    }

                }
            }
        }).mount('#app')
    </script>

</body>

</html>